const staticCacheKey="static-ph-v0.0.5";const dynamicCacheKey="dynamic-ph-v0.0.5";const preloadResources=["index.html","Component-preload.js","/resources/sap/ui/thirdparty/datajs.js","/resources/sap/ui/model/odata/v2/ODataModel.js"];self.addEventListener+
("push",t=>{const{title:e,options:a}=t.data.json();const s=self.registration.showNotification(e,a);t.waitUntil(s)});self.addEventListener("install",async()=>{const t=await caches.open(staticCacheKey);await t.addAll(preloadResources)});self.addEventListen+
er("activate",async()=>{const t=await caches.keys();await Promise.all(t.filter(t=>![staticCacheKey,dynamicCacheKey].includes(t)).map(t=>caches.delete(t)))});self.addEventListener("fetch",t=>{const{request:e}=t;const a=new URL(e.url);if(e.url.startsWith("+
http")){t.respondWith(networkFirst(e,dynamicCacheKey))}else if(a.origin===location.origin){t.respondWith(cacheFirst(e))}});async function cacheFirst(t){const e=await caches.match(t);return e??await networkFirst(t,staticCacheKey)}async function networkFir+
st(t,e){const a=await caches.open(e);try{const e=await fetch(t,{credentials:"include"});if(t.method!=="POST")a.put(t,e.clone());return e}catch(e){const s=await a.match(t);return s??console.error("request failed",e)}}                                       
//# sourceMappingURL=service-worker.js.map                                                                                                                                                                                                                     