*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZV_T004.........................................*
FORM GET_DATA_ZV_T004.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZLMOT004 WHERE
(VIM_WHERETAB) .
    CLEAR ZV_T004 .
ZV_T004-MANDT =
ZLMOT004-MANDT .
ZV_T004-LGNUM =
ZLMOT004-LGNUM .
ZV_T004-PRCNR =
ZLMOT004-PRCNR .
ZV_T004-PROGR =
ZLMOT004-PROGR .
ZV_T004-CAMPO =
ZLMOT004-CAMPO .
ZV_T004-VALOR =
ZLMOT004-VALOR .
ZV_T004-ERDAT =
ZLMOT004-ERDAT .
ZV_T004-ERZET =
ZLMOT004-ERZET .
ZV_T004-ERNAM =
ZLMOT004-ERNAM .
ZV_T004-LAEDA =
ZLMOT004-LAEDA .
ZV_T004-AEZET =
ZLMOT004-AEZET .
ZV_T004-AENAM =
ZLMOT004-AENAM .
<VIM_TOTAL_STRUC> = ZV_T004.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZV_T004 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZV_T004.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZV_T004-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZLMOT004 WHERE
  LGNUM = ZV_T004-LGNUM AND
  PRCNR = ZV_T004-PRCNR AND
  PROGR = ZV_T004-PROGR AND
  CAMPO = ZV_T004-CAMPO .
    IF SY-SUBRC = 0.
    DELETE ZLMOT004 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZLMOT004 WHERE
  LGNUM = ZV_T004-LGNUM AND
  PRCNR = ZV_T004-PRCNR AND
  PROGR = ZV_T004-PROGR AND
  CAMPO = ZV_T004-CAMPO .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZLMOT004.
    ENDIF.
ZLMOT004-MANDT =
ZV_T004-MANDT .
ZLMOT004-LGNUM =
ZV_T004-LGNUM .
ZLMOT004-PRCNR =
ZV_T004-PRCNR .
ZLMOT004-PROGR =
ZV_T004-PROGR .
ZLMOT004-CAMPO =
ZV_T004-CAMPO .
ZLMOT004-VALOR =
ZV_T004-VALOR .
ZLMOT004-ERDAT =
ZV_T004-ERDAT .
ZLMOT004-ERZET =
ZV_T004-ERZET .
ZLMOT004-ERNAM =
ZV_T004-ERNAM .
ZLMOT004-LAEDA =
ZV_T004-LAEDA .
ZLMOT004-AEZET =
ZV_T004-AEZET .
ZLMOT004-AENAM =
ZV_T004-AENAM .
    IF SY-SUBRC = 0.
    UPDATE ZLMOT004 ##WARN_OK.
    ELSE.
    INSERT ZLMOT004 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZV_T004-UPD_FLAG,
STATUS_ZV_T004-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZV_T004.
  SELECT SINGLE * FROM ZLMOT004 WHERE
LGNUM = ZV_T004-LGNUM AND
PRCNR = ZV_T004-PRCNR AND
PROGR = ZV_T004-PROGR AND
CAMPO = ZV_T004-CAMPO .
ZV_T004-MANDT =
ZLMOT004-MANDT .
ZV_T004-LGNUM =
ZLMOT004-LGNUM .
ZV_T004-PRCNR =
ZLMOT004-PRCNR .
ZV_T004-PROGR =
ZLMOT004-PROGR .
ZV_T004-CAMPO =
ZLMOT004-CAMPO .
ZV_T004-VALOR =
ZLMOT004-VALOR .
ZV_T004-ERDAT =
ZLMOT004-ERDAT .
ZV_T004-ERZET =
ZLMOT004-ERZET .
ZV_T004-ERNAM =
ZLMOT004-ERNAM .
ZV_T004-LAEDA =
ZLMOT004-LAEDA .
ZV_T004-AEZET =
ZLMOT004-AEZET .
ZV_T004-AENAM =
ZLMOT004-AENAM .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZV_T004 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZV_T004-LGNUM TO
ZLMOT004-LGNUM .
MOVE ZV_T004-PRCNR TO
ZLMOT004-PRCNR .
MOVE ZV_T004-PROGR TO
ZLMOT004-PROGR .
MOVE ZV_T004-CAMPO TO
ZLMOT004-CAMPO .
MOVE ZV_T004-MANDT TO
ZLMOT004-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZLMOT004'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZLMOT004 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZLMOT004'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .
